{"v":"5.7.11","fr":25,"ip":0,"op":76,"w":500,"h":500,"nm":"Comp 67","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Layer 9","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":3,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":9,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":38,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":41,"s":[100]},{"t":47,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[137.119,224.286,0],"to":[0,-1.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":28,"s":[137.119,214.286,0],"to":[0,0,0],"ti":[0,-1.667,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":31,"s":[137.119,224.286,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":70,"s":[137.119,224.286,0],"to":[0,-1.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":73,"s":[137.119,214.286,0],"to":[0,0,0],"ti":[0,-1.667,0]},{"t":75,"s":[137.119,224.286,0]}],"ix":2,"l":2},"a":{"a":0,"k":[-112.881,-25.714,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[0,0,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":3,"s":[150,150,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":38,"s":[0,0,100]},{"t":41,"s":[100,100,100]}],"ix":6,"l":2,"x":"var $bm_rt;\nvar fx = effect('ŝlosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"}},"ao":0,"ef":[{"ty":5,"nm":"ŝlosilo pli pura","np":34,"mn":"Pseudo/Duik Kleaner v3.2","ix":1,"en":1,"ef":[{"ty":7,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0001","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0002","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0003","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0004","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","mn":"Pseudo/Duik Kleaner v3.2-0005","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","mn":"Pseudo/Duik Kleaner v3.2-0006","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0007","ix":7,"v":0},{"ty":6,"nm":"Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0008","ix":8,"v":0},{"ty":0,"nm":"Slow In","mn":"Pseudo/Duik Kleaner v3.2-0009","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","mn":"Pseudo/Duik Kleaner v3.2-0010","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0011","ix":11,"v":0},{"ty":6,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0012","ix":12,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/Duik Kleaner v3.2-0013","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","mn":"Pseudo/Duik Kleaner v3.2-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","mn":"Pseudo/Duik Kleaner v3.2-0015","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","mn":"Pseudo/Duik Kleaner v3.2-0016","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","mn":"Pseudo/Duik Kleaner v3.2-0017","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0018","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","mn":"Pseudo/Duik Kleaner v3.2-0019","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0020","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","mn":"Pseudo/Duik Kleaner v3.2-0021","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0022","ix":22,"v":0},{"ty":7,"nm":"Overlap","mn":"Pseudo/Duik Kleaner v3.2-0023","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","mn":"Pseudo/Duik Kleaner v3.2-0024","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","mn":"Pseudo/Duik Kleaner v3.2-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0026","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0027","ix":27,"v":0},{"ty":7,"nm":"Soft Body","mn":"Pseudo/Duik Kleaner v3.2-0028","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","mn":"Pseudo/Duik Kleaner v3.2-0029","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0030","ix":30,"v":0},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0031","ix":31,"v":0},{"ty":0,"nm":"Precision","mn":"Pseudo/Duik Kleaner v3.2-0032","ix":32,"v":{"a":0,"k":1,"ix":32}}]}],"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.611,-0.049],[0.491,1.192],[-0.036,4.731],[-0.779,3.341],[-0.597,-0.105],[-0.049,-3.325],[0.017,-2.48],[0.337,-1.213]],"o":[[-0.611,0.049],[-0.466,-1.191],[0.017,-2.591],[0.762,-3.349],[0.611,0.106],[0.032,3.328],[-0.035,4.526],[-0.314,1.212]],"v":[[-122.447,-14.74],[-124.106,-15.882],[-124.998,-24.204],[-123.753,-34.206],[-121.363,-40.056],[-120.631,-33.869],[-120.557,-24.155],[-120.973,-16.099]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.025787353516,0.032928466797,0.033721923828,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.56,-0.249],[1.562,2.71],[0.473,1.1],[0.5,1.632],[0.558,5.967],[-0.43,4.462],[-1.217,4.134],[-1.277,2.494],[-0.263,-0.132],[0.838,-2.604],[0.759,-4.064],[0.166,-4.235],[-0.231,-3.079],[-0.779,-3.122],[-0.321,-1.089],[-0.189,-0.721]],"o":[[-0.56,0.249],[-0.412,-0.67],[-0.492,-1.094],[-1.046,-3.242],[-0.249,-3.268],[0.405,-4.46],[1.193,-4.146],[1.357,-2.465],[0.286,0.141],[-0.761,2.636],[-0.783,4.055],[-0.19,4.239],[0.525,5.62],[0.366,1.571],[0.289,1.101],[0.764,2.883]],"v":[[-101.907,5.148],[-104.576,2.819],[-105.845,0.166],[-107.347,-3.895],[-110.084,-17.518],[-110.074,-29.48],[-107.557,-42.739],[-103.476,-52.943],[-100.844,-56.69],[-101.879,-52.281],[-104.508,-41.988],[-105.99,-29.221],[-105.662,-17.928],[-103.412,-5.015],[-102.369,-1.05],[-101.657,1.661]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.025787353516,0.032928466797,0.033721923828,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":275,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"Layer 8","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[214.336,166.534,0],"to":[0,-1.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":28,"s":[214.336,156.534,0],"to":[0,0,0],"ti":[0,-1.667,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":31,"s":[214.336,166.534,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":65,"s":[214.336,166.534,0],"to":[0,-1.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":68,"s":[214.336,156.534,0],"to":[0,0,0],"ti":[0,-1.667,0]},{"t":70,"s":[214.336,166.534,0]}],"ix":2,"l":2},"a":{"a":0,"k":[-35.664,-83.466,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":3,"s":[100,10.976,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":6,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":38,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":41,"s":[100,10.976,100]},{"t":44,"s":[100,100,100]}],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.132,0.018],[0.204,0.091],[0.2,0.018],[-0.101,0.077],[0,0],[-0.604,-0.89],[-0.476,-0.116],[-0.044,0.302],[-0.016,0.206],[0.003,0.422],[0.242,1.013],[0.209,-0.023],[0.178,-0.038],[0.198,-0.156],[0.292,-0.928],[-0.039,-2.105],[-0.552,-0.868],[-0.74,-0.096],[-0.763,0.865],[-0.319,1.408],[0.932,3.425],[0.84,0.775],[0.332,-0.052],[0.517,-0.624],[0.351,-0.849],[0.298,-1.041],[0.096,-2.287],[-0.463,-2.278],[-0.512,-0.808],[-0.594,-0.1],[-0.47,0.223],[-0.471,0.571],[-0.589,1.866],[0.422,4.034],[1.055,1.351],[1.726,-0.169],[1.348,-1.438],[0.468,-2.175],[-0.027,-2.445],[-0.368,-2.223],[-1.455,-1.394],[-1.917,0.546],[-1.586,1.671],[-1.222,1.986],[0.299,4.398],[3.353,2.187],[3.079,-1.895],[0.756,-3.415],[0.099,-3.105],[-0.147,-2.471],[-0.878,-1.395],[-0.827,-0.205],[-0.018,-0.094],[0.992,0.067],[1.138,1.544],[0.251,2.472],[0.06,3.165],[-0.672,3.781],[-0.969,1.889],[-1.949,1.282],[-4.21,-2.662],[-0.377,-5.119],[2.62,-4.456],[1.823,-2.031],[2.924,-0.954],[1.574,0.363],[1.119,1.051],[0.461,2.711],[0.096,2.528],[-0.528,2.677],[-2.023,2.167],[-3.017,0.345],[-1.432,-0.631],[-0.891,-1.153],[-0.336,-2.436],[1.303,-4.191],[1.513,-1.81],[1.219,-0.61],[1.357,0.284],[0.873,1.412],[0.33,1.453],[-0.126,2.648],[-0.676,2.402],[-0.458,1.126],[-0.925,1.067],[-1.822,0.312],[-1.067,-1.101],[-0.454,-1.082],[-0.272,-1.04],[0.802,-3.872],[1.404,-1.59],[1.08,-0.432],[1.128,0.204],[0.931,1.531],[-0.027,1.539],[-0.334,1.262],[-0.413,1.194],[-1.337,0.998],[-0.816,0.13],[-0.742,-0.397],[-0.321,-0.749],[-0.133,-0.649],[0.068,-1.163],[0.13,-0.714],[0.233,-0.667],[0.499,-1.078],[0.786,0.769],[0.416,0.789],[0.102,0.827],[0,0],[0,0],[-0.416,-0.037],[-0.245,-0.164],[-0.021,-0.304]],"o":[[-0.181,-0.013],[-0.099,-0.038],[-0.225,-0.032],[0,0],[0.232,0.637],[0.362,0.461],[0.102,-0.311],[0.024,-0.16],[0.021,-0.248],[0.004,-0.925],[-0.195,-1.05],[-0.112,-0.029],[-0.17,0.032],[-0.351,0.265],[-0.604,2.035],[0.02,1.089],[0.532,0.856],[0.788,0.109],[0.75,-0.856],[0.576,-2.917],[-0.469,-1.705],[-0.396,-0.366],[-0.315,0.038],[-0.523,0.599],[-0.392,0.977],[-0.578,2.086],[-0.111,2.268],[0.239,1.072],[0.53,0.816],[0.423,0.087],[0.467,-0.219],[0.984,-1.172],[1.151,-3.596],[-0.24,-1.96],[-1.049,-1.353],[-1.731,0.157],[-1.345,1.39],[-0.459,2.177],[0.056,2.469],[0.351,2.239],[1.418,1.393],[1.929,-0.577],[1.564,-1.674],[2.457,-4.015],[-0.223,-4.37],[-3.336,-2.241],[-3.175,1.923],[-0.746,3.471],[-0.073,3.108],[0.113,2.47],[0.857,1.394],[0.853,0.202],[0.022,0.05],[-0.962,-0.079],[-1.151,-1.533],[-0.289,-2.493],[-0.03,-3.156],[0.365,-1.876],[0.944,-1.889],[4.016,-2.591],[4.352,2.712],[0.46,5.214],[-1.345,2.258],[-1.83,1.961],[-1.458,0.45],[-1.593,-0.339],[-2.273,-2.096],[-0.48,-2.76],[-0.056,-2.554],[0.53,-2.635],[1.959,-2.096],[1.497,-0.163],[1.429,0.618],[1.803,2.327],[0.536,4.857],[-0.629,2.021],[-0.757,0.91],[-1.194,0.617],[-2.141,-0.37],[-0.91,-1.45],[-0.568,-2.808],[0.118,-2.632],[0.346,-1.2],[0.523,-1.239],[0.901,-1.037],[1.805,-0.34],[1.082,1.087],[0.418,1.065],[1.056,4.168],[-0.484,1.952],[-0.704,0.783],[-1.089,0.431],[-2.3,-0.418],[-0.969,-1.54],[0.009,-1.576],[0.357,-1.29],[0.441,-1.187],[0.64,-0.459],[0.804,-0.145],[1.114,0.592],[0.342,0.792],[0.252,1.317],[-0.044,0.622],[-0.129,0.757],[-0.477,1.356],[-1.092,-0.735],[-0.782,-0.782],[-0.619,-1.23],[0,0],[0,0],[0.421,-0.597],[0.44,0.029],[0.49,0.331],[0,0.624]],"v":[[-37.125,-83.626],[-37.638,-83.862],[-38.06,-83.961],[-38.379,-83.911],[-38.176,-84.576],[-37.007,-82.251],[-35.724,-81.235],[-35.503,-82.16],[-35.454,-82.641],[-35.39,-83.891],[-35.722,-86.815],[-36.655,-88.797],[-36.985,-88.804],[-37.586,-88.504],[-38.635,-86.637],[-39.983,-80.128],[-39.184,-77.264],[-37.099,-75.697],[-34.788,-76.729],[-33.115,-80.314],[-33.548,-90.265],[-35.537,-94.688],[-36.559,-95.073],[-37.952,-94.086],[-39.292,-91.823],[-40.327,-88.795],[-41.386,-82.212],[-40.865,-75.25],[-39.734,-72.319],[-38.039,-70.973],[-36.767,-71.182],[-35.312,-72.43],[-33.085,-77.005],[-31.837,-88.771],[-33.706,-94.03],[-37.973,-95.902],[-42.916,-93.302],[-45.545,-87.749],[-46.055,-80.759],[-45.649,-73.541],[-42.995,-67.904],[-37.794,-66.633],[-32.408,-70.315],[-28.145,-76.002],[-24.456,-88.926],[-30.052,-99.705],[-40.96,-100.357],[-46.417,-91.341],[-47.368,-81.333],[-47.213,-72.937],[-45.913,-67.008],[-42.996,-64.769],[-41.634,-64.594],[-43.069,-64.321],[-46.656,-66.508],[-48.528,-72.822],[-49.097,-81.337],[-48.492,-91.76],[-46.636,-97.481],[-42.287,-102.456],[-28.525,-102.082],[-21.324,-89.15],[-25.201,-74.249],[-29.804,-67.89],[-36.732,-63.107],[-41.43,-62.898],[-45.594,-65.135],[-49.496,-72.87],[-50.058,-80.69],[-49.554,-88.568],[-45.968,-96.146],[-38.407,-100.122],[-33.871,-99.45],[-30.324,-96.687],[-27.52,-89.308],[-28.872,-75.676],[-31.885,-69.614],[-34.765,-67.219],[-38.847,-66.606],[-43.473,-69.924],[-45.199,-74.299],[-45.807,-82.42],[-44.566,-89.996],[-43.358,-93.487],[-41.262,-96.953],[-37.258,-99.38],[-32.507,-97.802],[-30.402,-94.473],[-29.388,-91.366],[-29.026,-79.359],[-31.704,-73.971],[-34.389,-72.046],[-37.771,-71.684],[-42.577,-75.159],[-43.895,-80.103],[-43.256,-84.348],[-42.156,-87.872],[-39.758,-91.415],[-37.586,-92.334],[-35.065,-91.951],[-33.032,-89.637],[-32.42,-87.513],[-32.181,-83.777],[-32.393,-82.011],[-32.955,-79.786],[-34.461,-76.323],[-37.258,-78.552],[-39.092,-81.044],[-40.053,-84.163],[-40.11,-84.623],[-39.93,-84.879],[-38.409,-85.616],[-37.406,-85.281],[-36.698,-84.205]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.025787353516,0.032928466797,0.033721923828,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":275,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"Layer 7","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[276.37,167.813,0],"to":[0,-1.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":28,"s":[276.37,157.813,0],"to":[0,0,0],"ti":[0,-1.667,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":31,"s":[276.37,167.813,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":65,"s":[276.37,167.813,0],"to":[0,-1.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":68,"s":[276.37,157.813,0],"to":[0,0,0],"ti":[0,-1.667,0]},{"t":70,"s":[276.37,167.813,0]}],"ix":2,"l":2},"a":{"a":0,"k":[26.37,-82.187,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":3,"s":[100,10.976,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":6,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":38,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":41,"s":[100,10.976,100]},{"t":44,"s":[100,100,100]}],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.132,0.019],[0.204,0.091],[0.2,0.018],[-0.101,0.077],[0,0],[-0.604,-0.89],[-0.476,-0.116],[-0.044,0.303],[-0.016,0.206],[0.003,0.422],[0.242,1.013],[0.209,-0.023],[0.178,-0.038],[0.198,-0.156],[0.292,-0.928],[-0.039,-2.105],[-0.552,-0.868],[-0.74,-0.097],[-0.763,0.865],[-0.319,1.409],[0.932,3.424],[0.84,0.775],[0.332,-0.052],[0.517,-0.624],[0.351,-0.849],[0.298,-1.041],[0.096,-2.287],[-0.463,-2.278],[-0.512,-0.808],[-0.594,-0.099],[-0.47,0.223],[-0.471,0.571],[-0.589,1.866],[0.422,4.034],[1.055,1.351],[1.726,-0.169],[1.348,-1.438],[0.468,-2.175],[-0.027,-2.445],[-0.368,-2.222],[-1.455,-1.393],[-1.917,0.546],[-1.586,1.67],[-1.222,1.986],[0.299,4.398],[3.353,2.186],[3.079,-1.895],[0.756,-3.416],[0.099,-3.105],[-0.147,-2.471],[-0.879,-1.396],[-0.827,-0.205],[-0.018,-0.094],[0.992,0.066],[1.138,1.544],[0.251,2.472],[0.06,3.166],[-0.672,3.782],[-0.969,1.889],[-1.949,1.282],[-4.21,-2.661],[-0.377,-5.119],[2.62,-4.456],[1.823,-2.031],[2.924,-0.954],[1.574,0.363],[1.119,1.05],[0.461,2.711],[0.096,2.528],[-0.528,2.677],[-2.023,2.167],[-3.017,0.345],[-1.432,-0.631],[-0.891,-1.153],[-0.336,-2.437],[1.303,-4.191],[1.513,-1.81],[1.219,-0.611],[1.357,0.284],[0.873,1.412],[0.33,1.453],[-0.126,2.647],[-0.676,2.402],[-0.458,1.126],[-0.925,1.067],[-1.822,0.312],[-1.067,-1.101],[-0.453,-1.082],[-0.272,-1.04],[0.802,-3.872],[1.404,-1.59],[1.08,-0.433],[1.128,0.204],[0.931,1.531],[-0.027,1.538],[-0.334,1.261],[-0.413,1.194],[-1.337,0.998],[-0.816,0.13],[-0.742,-0.397],[-0.321,-0.749],[-0.133,-0.649],[0.068,-1.163],[0.13,-0.714],[0.233,-0.667],[0.499,-1.077],[0.786,0.77],[0.416,0.789],[0.102,0.827],[0,0],[0,0],[-0.416,-0.038],[-0.245,-0.164],[-0.021,-0.304]],"o":[[-0.181,-0.013],[-0.099,-0.038],[-0.225,-0.032],[0,0],[0.232,0.637],[0.362,0.461],[0.102,-0.311],[0.024,-0.16],[0.021,-0.248],[0.004,-0.926],[-0.195,-1.05],[-0.112,-0.03],[-0.171,0.032],[-0.351,0.265],[-0.604,2.036],[0.02,1.089],[0.532,0.857],[0.788,0.109],[0.75,-0.856],[0.576,-2.917],[-0.469,-1.705],[-0.396,-0.366],[-0.315,0.038],[-0.523,0.6],[-0.392,0.976],[-0.578,2.086],[-0.111,2.268],[0.239,1.072],[0.531,0.816],[0.423,0.088],[0.467,-0.219],[0.984,-1.172],[1.151,-3.596],[-0.24,-1.96],[-1.049,-1.353],[-1.731,0.157],[-1.345,1.39],[-0.459,2.177],[0.056,2.469],[0.351,2.239],[1.418,1.393],[1.929,-0.577],[1.564,-1.674],[2.457,-4.015],[-0.223,-4.37],[-3.336,-2.242],[-3.175,1.923],[-0.746,3.471],[-0.073,3.108],[0.113,2.47],[0.857,1.394],[0.853,0.201],[0.022,0.05],[-0.962,-0.079],[-1.151,-1.533],[-0.289,-2.493],[-0.03,-3.156],[0.365,-1.875],[0.944,-1.889],[4.016,-2.59],[4.352,2.713],[0.46,5.214],[-1.345,2.258],[-1.83,1.961],[-1.458,0.45],[-1.594,-0.338],[-2.273,-2.097],[-0.48,-2.76],[-0.056,-2.554],[0.53,-2.635],[1.96,-2.096],[1.497,-0.163],[1.429,0.618],[1.803,2.327],[0.536,4.857],[-0.629,2.021],[-0.757,0.91],[-1.194,0.617],[-2.141,-0.371],[-0.91,-1.45],[-0.568,-2.809],[0.118,-2.632],[0.346,-1.2],[0.523,-1.239],[0.901,-1.037],[1.805,-0.34],[1.082,1.087],[0.418,1.065],[1.056,4.167],[-0.484,1.952],[-0.704,0.783],[-1.089,0.43],[-2.3,-0.419],[-0.969,-1.54],[0.009,-1.577],[0.357,-1.29],[0.441,-1.187],[0.64,-0.459],[0.804,-0.144],[1.114,0.592],[0.342,0.791],[0.252,1.317],[-0.044,0.622],[-0.129,0.757],[-0.477,1.356],[-1.092,-0.735],[-0.782,-0.782],[-0.619,-1.23],[0,0],[0,0],[0.421,-0.597],[0.44,0.029],[0.49,0.331],[0,0.624]],"v":[[24.909,-82.347],[24.396,-82.583],[23.974,-82.682],[23.655,-82.632],[23.857,-83.297],[25.027,-80.972],[26.31,-79.956],[26.531,-80.881],[26.579,-81.362],[26.644,-82.612],[26.312,-85.537],[25.379,-87.518],[25.049,-87.525],[24.448,-87.224],[23.399,-85.358],[22.051,-78.849],[22.85,-75.985],[24.934,-74.417],[27.245,-75.45],[28.918,-79.035],[28.486,-88.986],[26.496,-93.409],[25.475,-93.794],[24.082,-92.807],[22.742,-90.544],[21.706,-87.516],[20.647,-80.933],[21.168,-73.971],[22.3,-71.04],[23.995,-69.694],[25.267,-69.903],[26.722,-71.151],[28.948,-75.726],[30.196,-87.491],[28.328,-92.751],[24.06,-94.623],[19.118,-92.023],[16.489,-86.469],[15.978,-79.479],[16.385,-72.262],[19.039,-66.626],[24.239,-65.354],[29.626,-69.036],[33.889,-74.723],[37.578,-87.647],[31.982,-98.426],[21.073,-99.078],[15.617,-90.062],[14.665,-80.055],[14.821,-71.658],[16.121,-65.729],[19.038,-63.49],[20.4,-63.315],[18.965,-63.042],[15.378,-65.229],[13.505,-71.542],[12.937,-80.058],[13.542,-90.481],[15.398,-96.202],[19.747,-101.178],[33.509,-100.803],[40.71,-87.871],[36.833,-72.97],[32.23,-66.611],[25.302,-61.828],[20.603,-61.619],[16.44,-63.855],[12.537,-71.591],[11.976,-79.411],[12.48,-87.289],[16.065,-94.866],[23.627,-98.843],[28.162,-98.171],[31.71,-95.408],[34.514,-88.029],[33.162,-74.397],[30.148,-68.335],[27.268,-65.94],[23.187,-65.327],[18.561,-68.645],[16.834,-73.02],[16.227,-81.141],[17.467,-88.717],[18.676,-92.208],[20.772,-95.674],[24.775,-98.101],[29.527,-96.523],[31.632,-93.194],[32.646,-90.087],[33.008,-78.08],[30.329,-72.692],[27.644,-70.767],[24.263,-70.405],[19.456,-73.88],[18.138,-78.824],[18.777,-83.069],[19.878,-86.593],[22.275,-90.136],[24.448,-91.055],[26.968,-90.672],[29.002,-88.357],[29.614,-86.234],[29.853,-82.498],[29.641,-80.732],[29.078,-78.507],[27.573,-75.045],[24.775,-77.274],[22.941,-79.766],[21.98,-82.885],[21.924,-83.344],[22.104,-83.599],[23.625,-84.337],[24.627,-84.002],[25.336,-82.925]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.025787353516,0.032928466797,0.033721923828,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":275,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"Layer 6","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[250,250,0],"to":[0,-1.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":28,"s":[250,240,0],"to":[0,0,0],"ti":[0,-1.667,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":31,"s":[250,250,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":65,"s":[250,250,0],"to":[0,-1.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":68,"s":[250,240,0],"to":[0,0,0],"ti":[0,-1.667,0]},{"t":70,"s":[250,250,0]}],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.149,0.268],[-0.757,0.682],[-3.761,0.45],[-2.788,-0.806],[-2.877,-3.013],[-1.318,-5.278],[2.205,-6.757],[3.697,-3.346],[5.656,0.43],[2.338,1.508],[1.627,2.159],[0.625,4.968],[-1.424,4.08],[-2.128,2.416],[-0.054,-0.208],[3.656,-4.907],[1.073,-3.819],[-0.743,-4.477],[-2.921,-3.654],[-4.252,-0.171],[-2.877,2.683],[-1.049,3.14],[1.047,4.56],[2.291,2.494],[2.214,0.846],[1.549,0.023],[0.899,-0.098]],"o":[[-0.149,-0.267],[0.764,-0.61],[1.867,-0.192],[2.742,0.85],[2.875,2.95],[1.267,5.259],[-1.23,3.662],[-3.647,3.291],[-2.811,-0.208],[-2.356,-1.504],[-3.248,-4.347],[-0.613,-4.979],[1.406,-4.088],[4.33,-4.868],[0.223,0.326],[-1.804,2.436],[-1.09,3.802],[0.749,4.463],[2.894,3.641],[4.276,0.243],[2.916,-2.701],[1.902,-5.812],[-1.093,-4.588],[-2.26,-2.52],[-2.244,-0.795],[-3.114,0],[-0.895,0.156]],"v":[[11.626,-109.571],[12.138,-110.8],[18.353,-113.066],[25.385,-112.356],[34.243,-106.909],[40.888,-94.447],[40.184,-76.035],[33.135,-64.909],[18.589,-59.691],[10.67,-62.406],[4.699,-68.024],[-1.003,-82.464],[0.37,-96.369],[6.029,-106.18],[14.35,-112.188],[7.374,-105.095],[2.74,-95.629],[2.105,-82.917],[7.608,-70.282],[18.873,-63.774],[30.21,-68.131],[35.969,-77.436],[36.658,-93.426],[31.26,-104.108],[24.23,-108.859],[18.503,-109.929],[12.888,-109.242]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.025787353516,0.032928466797,0.033721923828,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[1.854,-7.608],[-3.992,-6.597],[-4.858,-1.252],[-4.3,4.566],[-0.297,6.481],[5.445,5.215],[6.45,-3.668]],"o":[[-6.491,3.661],[-1.854,7.608],[2.719,4.494],[5.884,1.516],[4.3,-4.566],[0.359,-7.818],[-5.445,-5.215],[0,0]],"v":[[14.35,-112.188],[1.059,-94.238],[4.464,-71.613],[16.128,-62.143],[32.757,-67.574],[39.609,-85.12],[31.974,-106.306],[11.626,-109.571]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.149,0.267],[-0.757,0.682],[-3.761,0.45],[-2.788,-0.806],[-2.877,-3.013],[-1.318,-5.278],[2.205,-6.757],[3.697,-3.346],[5.656,0.43],[2.338,1.509],[1.627,2.159],[0.625,4.969],[-1.424,4.079],[-2.128,2.416],[-0.054,-0.207],[3.656,-4.907],[1.073,-3.819],[-0.743,-4.477],[-2.921,-3.654],[-4.252,-0.171],[-2.877,2.683],[-1.049,3.14],[1.047,4.56],[2.291,2.494],[2.214,0.847],[1.549,0.024],[0.899,-0.099]],"o":[[-0.149,-0.268],[0.764,-0.61],[1.867,-0.192],[2.742,0.851],[2.875,2.95],[1.267,5.259],[-1.23,3.662],[-3.647,3.291],[-2.811,-0.208],[-2.356,-1.503],[-3.248,-4.348],[-0.613,-4.979],[1.406,-4.089],[4.33,-4.868],[0.223,0.326],[-1.804,2.437],[-1.09,3.802],[0.749,4.463],[2.894,3.641],[4.276,0.242],[2.916,-2.701],[1.902,-5.812],[-1.093,-4.587],[-2.26,-2.52],[-2.244,-0.795],[-3.114,0.001],[-0.895,0.156]],"v":[[-49.768,-110.85],[-49.256,-112.079],[-43.041,-114.345],[-36.009,-113.635],[-27.151,-108.189],[-20.507,-95.726],[-21.211,-77.314],[-28.259,-66.189],[-42.805,-60.971],[-50.724,-63.685],[-56.695,-69.302],[-62.397,-83.743],[-61.025,-97.648],[-55.366,-107.459],[-47.044,-113.467],[-54.02,-106.374],[-58.654,-96.908],[-59.289,-84.196],[-53.786,-71.562],[-42.521,-65.053],[-31.184,-69.409],[-25.425,-78.715],[-24.736,-94.706],[-30.134,-105.387],[-37.164,-110.139],[-42.891,-111.208],[-48.506,-110.521]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.025787353516,0.032928466797,0.033721923828,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[1.854,-7.608],[-3.992,-6.597],[-4.858,-1.252],[-4.3,4.566],[-0.297,6.481],[5.445,5.215],[6.45,-3.668]],"o":[[-6.491,3.661],[-1.854,7.608],[2.719,4.494],[5.884,1.516],[4.3,-4.566],[0.359,-7.818],[-5.445,-5.215],[0,0]],"v":[[-47.044,-113.467],[-60.335,-95.517],[-56.93,-72.892],[-45.266,-63.422],[-28.637,-68.854],[-21.785,-86.399],[-29.42,-107.585],[-49.768,-110.85]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":275,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"Layer 5","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":3,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":8,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":38,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":41,"s":[100]},{"t":46,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[321.925,178.151,0],"to":[0,-1.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":28,"s":[321.925,168.151,0],"to":[0,0,0],"ti":[0,-1.667,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":31,"s":[321.925,178.151,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":65,"s":[321.925,178.151,0],"to":[0,-1.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":68,"s":[321.925,168.151,0],"to":[0,0,0],"ti":[0,-1.667,0]},{"t":70,"s":[321.925,178.151,0]}],"ix":2,"l":2},"a":{"a":0,"k":[71.925,-71.849,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[0,0,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":3,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":38,"s":[0,0,100]},{"t":41,"s":[100,100,100]}],"ix":6,"l":2,"x":"var $bm_rt;\nvar fx = effect('ŝlosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"}},"ao":0,"ef":[{"ty":5,"nm":"ŝlosilo pli pura","np":34,"mn":"Pseudo/Duik Kleaner v3.2","ix":1,"en":1,"ef":[{"ty":7,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0001","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0002","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0003","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","mn":"Pseudo/Duik Kleaner v3.2-0004","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","mn":"Pseudo/Duik Kleaner v3.2-0005","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","mn":"Pseudo/Duik Kleaner v3.2-0006","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0007","ix":7,"v":0},{"ty":6,"nm":"Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0008","ix":8,"v":0},{"ty":0,"nm":"Slow In","mn":"Pseudo/Duik Kleaner v3.2-0009","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","mn":"Pseudo/Duik Kleaner v3.2-0010","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0011","ix":11,"v":0},{"ty":6,"nm":"Follow Through","mn":"Pseudo/Duik Kleaner v3.2-0012","ix":12,"v":0},{"ty":0,"nm":"Elasticity","mn":"Pseudo/Duik Kleaner v3.2-0013","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","mn":"Pseudo/Duik Kleaner v3.2-0014","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","mn":"Pseudo/Duik Kleaner v3.2-0015","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","mn":"Pseudo/Duik Kleaner v3.2-0016","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","mn":"Pseudo/Duik Kleaner v3.2-0017","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0018","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","mn":"Pseudo/Duik Kleaner v3.2-0019","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","mn":"Pseudo/Duik Kleaner v3.2-0020","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","mn":"Pseudo/Duik Kleaner v3.2-0021","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0022","ix":22,"v":0},{"ty":7,"nm":"Overlap","mn":"Pseudo/Duik Kleaner v3.2-0023","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","mn":"Pseudo/Duik Kleaner v3.2-0024","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","mn":"Pseudo/Duik Kleaner v3.2-0025","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0026","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","mn":"Pseudo/Duik Kleaner v3.2-0027","ix":27,"v":0},{"ty":7,"nm":"Soft Body","mn":"Pseudo/Duik Kleaner v3.2-0028","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","mn":"Pseudo/Duik Kleaner v3.2-0029","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0030","ix":30,"v":0},{"ty":6,"nm":"","mn":"Pseudo/Duik Kleaner v3.2-0031","ix":31,"v":0},{"ty":0,"nm":"Precision","mn":"Pseudo/Duik Kleaner v3.2-0032","ix":32,"v":{"a":0,"k":1,"ix":32}}]}],"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.593,-1.073],[6.681,-3.693],[0.593,1.074],[-3.661,2.024]],"o":[[0.593,1.074],[-3.661,2.024],[-0.593,-1.073],[6.681,-3.693]],"v":[[106.459,-78.811],[100.712,-73.096],[88.12,-68.673],[98.563,-76.983]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.025787353516,0.032928466797,0.033721923828,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.037,-0.53],[3.21,-7.294],[1.311,-2.628],[0.594,0.171],[-0.586,2.959],[-0.892,2.087]],"o":[[1.147,0.581],[-0.859,2.011],[-1.32,2.621],[-0.585,-0.167],[0.574,-2.959],[3.343,-7.593]],"v":[[88.861,-94.929],[87.406,-86.535],[83.754,-78.786],[80.658,-74.203],[80.782,-79.799],[83.317,-88.267]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.025787353516,0.032928466797,0.033721923828,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":1,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.157,0.407],[-2.82,-8.025],[1.157,-0.407],[1.545,4.397]],"o":[[1.157,-0.407],[1.545,4.397],[-1.157,0.407],[-2.82,-8.025]],"v":[[64.185,-93.877],[69.159,-86.42],[71.925,-71.849],[64.969,-84.947]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.025787353516,0.032928466797,0.033721923828,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":1,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":275,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"Layer 4","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":3.922,"s":[-22]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":8,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":38,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":41.922,"s":[-22]},{"t":46,"s":[0]}],"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[322.382,323.657,0],"to":[0,-1.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":28,"s":[322.382,313.657,0],"to":[0,0,0],"ti":[0,-1.667,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":31,"s":[322.382,323.657,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":65,"s":[322.382,323.657,0],"to":[0,-1.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":68,"s":[322.382,313.657,0],"to":[0,0,0],"ti":[0,-1.667,0]},{"t":70,"s":[322.382,323.657,0]}],"ix":2,"l":2},"a":{"a":0,"k":[72.382,73.657,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.306,0.011],[0.408,1.778],[0.253,0.693],[-0.206,0.233],[-0.68,-0.616],[-0.186,-0.673],[0.183,-0.312]],"o":[[-0.676,-0.021],[-0.137,-0.489],[-0.237,-0.693],[0.196,-0.227],[0.687,0.6],[0.346,1.23],[-0.204,0.32]],"v":[[100.363,-43.338],[99.018,-45.241],[98.425,-47.205],[98.117,-48.742],[99.707,-48.111],[101.148,-45.868],[101.152,-43.64]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.235,0.196],[-0.158,0.57],[-1.648,1.259],[-4.672,-0.527],[-2.233,-2.339],[-0.057,-4.149],[1.645,-2.322],[2.865,-0.992],[2.907,1.225],[1.384,2.466],[-0.311,2.435],[-1.293,1.282],[-0.988,0.112],[0.005,-0.128],[0.788,-0.341],[0.87,-1.215],[0.051,-1.882],[-1.255,-1.823],[-2.087,-0.706],[-2.02,0.806],[-1.013,1.585],[-0.003,1.546],[1.47,1.553],[1.595,0.344],[1.408,-0.59],[0.487,-0.156]],"o":[[-0.235,-0.196],[0.152,-0.568],[1.636,-1.164],[2.269,0.321],[2.224,2.277],[0.015,2.246],[-1.596,2.33],[-2.844,1.003],[-2.896,-1.195],[-1.413,-2.468],[0.353,-2.484],[1.298,-1.305],[1.012,-0.095],[0.001,0.175],[-0.776,0.36],[-0.868,1.186],[-0.027,1.905],[1.225,1.825],[2.066,0.722],[2.02,-0.798],[1.047,-1.57],[-0.035,-2.833],[-1.464,-1.602],[-3.267,-0.569],[-1.427,0.652],[-0.499,0.154]],"v":[[90.25,-52.9],[89.964,-53.87],[92.309,-56.67],[101.573,-58.881],[108.876,-55.198],[112.853,-45.356],[110.597,-38.07],[103.67,-32.887],[94.544,-33.049],[88.013,-38.919],[86.435,-46.617],[89.252,-52.331],[93.018,-54.291],[94.551,-54.041],[93.247,-53.425],[90.55,-51.19],[88.909,-46.405],[90.697,-40.549],[95.86,-36.489],[102.262,-36.729],[106.999,-40.516],[108.412,-45.347],[105.731,-52.191],[100.92,-54.841],[93.908,-53.968],[91.242,-52.706]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.025787353516,0.032928466797,0.033721923828,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.254,-3.787],[-5.31,-1.2],[-2.006,5.061],[4.69,2.763],[3.455,-4.207]],"o":[[-3.795,-0.019],[-0.365,5.432],[5.31,1.2],[2.006,-5.061],[-4.69,-2.763],[0,0]],"v":[[94.551,-54.041],[87.655,-46.351],[96.623,-34.325],[109.89,-41.328],[105.022,-55.517],[90.25,-52.899]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.8046875,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.221,0.212],[-0.803,-0.495],[-2.205,-2.605],[-3.203,-6.797],[-0.065,-13.249],[3.986,-9.074],[2.935,-4.071],[3.51,-3.17],[5.729,-2.182],[0.048,0.226],[-5.413,2.579],[-6.442,6.401],[-2.668,3.943],[-1.743,4.292],[-0.002,6.748],[2.728,6.463],[1.809,2.685],[0.363,0.871]],"o":[[0.221,-0.213],[0.766,0.526],[2.223,2.567],[3.106,6.762],[0.004,7.196],[-1.963,4.528],[-2.949,4.065],[-7.021,6.392],[-5.777,2.154],[-0.099,-0.367],[5.376,-2.609],[3.222,-3.176],[2.654,-3.95],[3.535,-8.593],[-0.059,-12.412],[-2.817,-6.496],[-1.788,-2.724],[-0.399,-0.841]],"v":[[104.025,-38.364],[105.302,-38.237],[109.762,-34.068],[118.383,-20.682],[125,8.971],[119.727,34.674],[112.309,47.702],[102.447,58.59],[82.002,71.196],[72.384,73.606],[81.319,69.608],[100.301,56.297],[109.297,45.583],[115.95,33.099],[120.559,8.972],[114.657,-18.989],[107.279,-32.146],[104.039,-37.055]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.025787353516,0.032928466797,0.033721923828,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":275,"st":0,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"Layer 3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[238.695,228.631,0],"to":[0,-1.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":28,"s":[238.695,218.631,0],"to":[0,0,0],"ti":[0,-1.667,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":31,"s":[238.695,228.631,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":65,"s":[238.695,228.631,0],"to":[0,-1.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":68,"s":[238.695,218.631,0],"to":[0,0,0],"ti":[0,-1.667,0]},{"t":70,"s":[238.695,228.631,0]}],"ix":2,"l":2},"a":{"a":0,"k":[-11.305,-21.369,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":18.75,"s":[100,66.426,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":37.5,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":56.25,"s":[100,66.426,100]},{"t":75,"s":[100,100,100]}],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-10.734,2.392],[-1.179,-3.722],[-3.091,0.649],[-0.721,-3.075],[1.722,-1.608],[2.229,-0.762],[3.911,0.665]],"o":[[3.811,-0.849],[1.17,-2.934],[3.091,-0.649],[0.538,2.293],[-1.722,1.608],[-3.754,1.283],[-7.67,-1.304]],"v":[[-19.544,-14.342],[-10.299,-9.02],[-3.624,-15.199],[3.811,-10.963],[1.511,-4.622],[-4.684,-1.335],[-16.356,0.232]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.025787353516,0.032928466797,0.033721923828,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.14,0.272],[-0.797,0.66],[-3.829,0.307],[-2.787,-0.953],[-2.773,-3.3],[-0.139,-5.649],[0.997,-3.067],[2.406,-2.738],[4.594,-1.756],[5.354,1.387],[-0.394,10.565],[-2.928,3.297],[-3.06,1.195],[-1.815,-0.15],[0.02,-0.116],[1.73,-0.167],[2.77,-1.3],[2.387,-3.203],[-0.042,-4.466],[-2.945,-3.699],[-4.4,-1.032],[-3.856,1.499],[-2.223,2.481],[0.126,4.659],[2.066,2.633],[2.217,0.919],[1.573,0.102],[0.91,-0.084]],"o":[[-0.14,-0.273],[0.794,-0.602],[1.894,-0.101],[2.754,0.956],[2.721,3.252],[0.1,2.815],[-1.014,3.057],[-2.662,2.975],[-4.575,1.714],[-10.817,-2.808],[0.166,-5.269],[2.863,-3.409],[3.111,-1.154],[1.823,0.122],[-0.022,0.186],[-1.725,0.137],[-2.724,1.34],[-2.466,3.114],[0.015,4.48],[2.938,3.708],[4.425,1.039],[3.869,-1.539],[4.037,-4.579],[-0.059,-4.697],[-2.08,-2.646],[-2.245,-0.925],[-3.172,-0.116],[-0.913,0.128]],"v":[[-13.486,-41.897],[-12.916,-43.111],[-6.524,-45.168],[0.573,-44.182],[9.345,-38.226],[14.298,-24.578],[13.008,-15.676],[7.875,-6.794],[-3.105,0.73],[-18.53,1.706],[-36.909,-22.637],[-31.606,-35.961],[-22.152,-42.633],[-14.508,-43.848],[-11.744,-43.269],[-14.491,-42.954],[-21.483,-41.039],[-29.679,-34.394],[-33.769,-22.604],[-29.009,-9.799],[-17.533,-2.263],[-4.668,-3.331],[4.553,-9.741],[9.949,-24.467],[6.172,-35.642],[-0.702,-40.727],[-6.492,-42.028],[-12.22,-41.529]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.025787353516,0.032928466797,0.033721923828,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":275,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"Layer 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"t":75,"s":[360]}],"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[241.231,231.494,0],"to":[0,-1.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":28,"s":[241.231,221.494,0],"to":[0,0,0],"ti":[0,-1.667,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":31,"s":[241.231,231.494,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":65,"s":[241.231,231.494,0],"to":[0,-1.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":68,"s":[241.231,221.494,0],"to":[0,0,0],"ti":[0,-1.667,0]},{"t":70,"s":[241.231,231.494,0]}],"ix":2,"l":2},"a":{"a":0,"k":[-8.769,-18.506,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.281,0.122],[-1.504,-3.05],[-1.436,-12.592],[1.71,-9.598],[2.015,-5.511],[3.887,-5.786],[17.202,-7.361],[10.665,-1.274],[5.759,0.33],[5.791,2.048],[10.423,12.821],[1.209,18.371],[-2.642,8.865],[-5.195,7.739],[-7.322,5.465],[-8.271,2.887],[-4.2,0.744],[-4.122,0.188],[-7.461,-1.289],[-6.126,-2.854],[-4.393,-3.712],[-2.773,-5.632],[-0.623,-1.549],[0.07,-0.031],[0.753,1.486],[1.504,2.772],[8.705,7.061],[6.003,2.693],[7.281,1.22],[8.013,-0.556],[4.054,-0.8],[3.973,-1.502],[6.999,-5.293],[4.913,-7.433],[2.458,-8.57],[-0.666,-8.682],[-9.954,-12.1],[-11.923,-4.139],[-5.375,-0.394],[-5.084,0.673],[-8.29,3.418],[-7.35,10.904],[-2.069,5.205],[-0.915,4.579],[0.382,6.059],[0.853,3.178]],"o":[[0.281,-0.122],[1.369,3.058],[0.602,6.274],[-0.874,4.79],[-2.1,5.475],[-7.74,11.682],[-8.63,3.592],[-5.325,0.708],[-5.782,-0.419],[-12.717,-4.422],[-10.4,-12.744],[-0.658,-9.13],[2.624,-8.902],[5.209,-7.733],[7.356,-5.446],[4.121,-1.502],[4.203,-0.775],[8.244,-0.46],[7.449,1.368],[6.08,2.866],[8.822,7.515],[1.386,2.859],[0.618,1.551],[-0.07,0.031],[-0.757,-1.484],[-3.01,-5.476],[-4.342,-3.496],[-5.991,-2.654],[-7.292,-1.141],[-4.007,0.236],[-4.066,0.774],[-7.975,2.889],[-6.965,5.314],[-4.898,7.442],[-2.482,8.597],[1.247,17.38],[9.973,12.176],[5.432,1.92],[5.401,0.309],[10.193,-1.2],[16.553,-7.029],[3.734,-5.459],[1.985,-5.242],[1.794,-9.174],[-0.987,-12.158],[-0.981,-3.172]],"v":[[68.592,-53.915],[70.733,-50.884],[76.422,-29.136],[75.484,-5.336],[71.226,10.144],[62.413,27.18],[24.502,57.008],[-4.464,64.793],[-21.114,65.287],[-38.58,61.579],[-74.826,35.378],[-94.205,-12.604],[-91.019,-40.042],[-79.282,-65.286],[-60.151,-85.198],[-36.36,-97.562],[-23.79,-100.887],[-11.279,-102.326],[12.401,-100.866],[32.921,-94.511],[48.797,-84.618],[64.788,-63.005],[67.753,-56.326],[68.592,-53.915],[67.34,-56.138],[63.992,-62.597],[47.696,-83.286],[32.041,-92.586],[11.98,-98.419],[-11.116,-99.506],[-23.235,-97.953],[-35.313,-94.601],[-58.104,-82.449],[-76.224,-63.234],[-87.266,-38.964],[-90.123,-12.889],[-71.454,32.629],[-37.098,57.393],[-20.792,60.864],[-4.989,60.406],[22.804,53.002],[59.027,24.881],[67.581,8.742],[71.865,-6.017],[73.293,-28.866],[69.12,-50.262]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.025787353516,0.032928466797,0.033721923828,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[11.631,26.294],[20.496,9.285],[20.087,-6.561],[6.985,-31.401],[-43.017,-2.154],[-16.82,23.1]],"o":[[-8.288,-18.738],[-19.226,-8.71],[-29.721,9.707],[-10.376,46.644],[27.936,1.399],[16.82,-23.1]],"v":[[68.592,-53.915],[32.202,-93.682],[-33.648,-96.869],[-90.656,-33.573],[-19.572,63.19],[59.286,28.15]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":275,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"Layer 1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[250,250,0],"to":[0,-1.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":28,"s":[250,240,0],"to":[0,0,0],"ti":[0,-1.667,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":31,"s":[250,250,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":65,"s":[250,250,0],"to":[0,-1.667,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":68,"s":[250,240,0],"to":[0,0,0],"ti":[0,-1.667,0]},{"t":70,"s":[250,250,0]}],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.592,0.162],[-0.524,1.922],[-0.592,-0.161],[0.287,-1.053]],"o":[[-0.592,-0.161],[0.287,-1.053],[0.592,0.162],[-0.524,1.922]],"v":[[49.076,101.995],[48.54,99.74],[50.515,96.719],[50.682,100.324]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":1,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.302,0.054],[0.015,1.161],[0.189,4.363],[0.752,3.111],[-0.291,0.139],[-1.138,-3.134],[-0.102,-2.526],[0.33,-1.145]],"o":[[-0.302,-0.054],[-0.072,-1.163],[-0.098,-2.388],[-0.711,-3.116],[0.258,-0.132],[1.176,3.115],[0.199,4.617],[-0.39,1.147]],"v":[[49.972,86.155],[49.39,84.838],[49.445,77.088],[48.175,67.838],[46.829,62.113],[49.679,67.388],[51.662,76.974],[50.943,85.072]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.029,0.307],[-2.067,0.447],[-2.248,0.225],[-3.965,-0.139],[-2.507,-0.468],[-2.805,-2.038],[-0.643,-0.676],[-0.475,-0.772],[-0.584,-1.88],[-0.067,-4.184],[0.342,-5.107],[3.269,-5.438],[2.815,-1.889],[3.336,-0.813],[3.499,-0.35],[3.717,-0.259],[22.281,0.534],[11.351,0.648],[2.819,0.169],[2.875,0.447],[2.675,1.524],[0.978,2.864],[0.1,2.641],[0.071,2.537],[0.124,4.66],[-1.601,4.208],[-1.509,1.394],[-1.675,0.753],[-2.844,0.066],[-1.965,-0.269],[0.017,-0.135],[3.915,0.289],[2.742,-0.204],[3.05,-1.482],[1.199,-3.691],[-0.247,-4.649],[-0.254,-5.066],[-0.128,-2.614],[-0.869,-2.218],[-2.14,-1.167],[-2.637,-0.37],[-2.829,-0.139],[-2.832,-0.129],[-11.089,-0.13],[-16.138,1.279],[-6.015,1.408],[-2.29,1.5],[-1.34,2.191],[-0.345,4.721],[-0.004,4.348],[0.928,3.085],[0.783,1.253],[0.404,0.525],[0.533,0.352],[2.214,0.52],[1.877,0.152],[2.208,0.019],[1.046,0.05]],"o":[[-0.028,-0.304],[1.035,-0.215],[2.248,-0.218],[1.981,0.059],[2.484,0.509],[0.721,0.468],[0.562,0.689],[0.98,1.491],[1.203,3.787],[0.043,4.11],[-0.343,5.06],[-1.625,2.693],[-2.836,1.868],[-3.346,0.816],[-3.491,0.315],[-16.283,1.29],[-11.141,-0.244],[-2.837,-0.171],[-2.801,-0.182],[-2.859,-0.455],[-2.67,-1.471],[-1.036,-2.841],[-0.074,-2.621],[-0.135,-5.07],[-0.113,-4.602],[0.773,-2.085],[1.507,-1.405],[3.373,-1.485],[2.857,-0.07],[3.925,0.58],[-0.022,0.169],[-1.955,-0.123],[-2.734,0.198],[-3.016,1.464],[-1.287,3.67],[0.233,4.655],[0.124,2.531],[0.138,2.569],[0.832,2.228],[2.134,1.178],[2.649,0.37],[2.815,0.128],[11.329,0.487],[22.179,0.306],[7.335,-0.652],[3.007,-0.725],[2.265,-1.522],[2.704,-4.405],[0.366,-4.773],[-0.001,-4.251],[-0.448,-1.544],[-0.359,-0.63],[-0.433,-0.451],[-1.973,-1.542],[-2.24,-0.504],[-3.753,-0.328],[-2.211,-0.013],[-2.092,-0.084]],"v":[[35.444,46.176],[37.607,45.117],[42.411,44.422],[51.596,44.103],[58.319,44.831],[66.471,48.119],[68.455,49.943],[70.016,52.054],[72.429,57.143],[73.731,69.284],[73.87,83.187],[69.441,99.442],[62.683,106.474],[53.257,110.357],[42.953,111.949],[32.152,112.888],[-27.426,114.233],[-61.375,112.838],[-69.863,112.328],[-78.4,111.568],[-86.859,108.904],[-92.775,102.019],[-94.049,93.696],[-94.267,85.956],[-94.656,71.334],[-93.416,57.814],[-89.861,52.492],[-84.988,49.326],[-75.446,47.311],[-68.192,47.779],[-62.166,49.019],[-68.284,48.669],[-75.378,48.63],[-84.258,50.893],[-91.427,58.538],[-92.175,71.239],[-91.444,85.848],[-91.065,93.568],[-89.838,100.907],[-85.255,106.035],[-77.907,108.177],[-69.665,108.774],[-61.192,109.16],[-27.354,110.141],[31.812,108.46],[52.22,106.063],[60.28,102.8],[65.734,97.165],[69.637,82.914],[69.639,69.329],[68.692,58.276],[66.81,54.091],[65.572,52.328],[64.233,51.043],[57.597,48.181],[51.402,47.237],[42.529,46.902],[37.75,46.84]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.025787353516,0.032928466797,0.033721923828,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[5.225,-0.692],[2.73,-4.216],[-0.185,-4.829],[-0.299,-7.785],[-2.524,-3.241],[-6.322,-0.362],[-38.126,3.752],[-5.562,4.249],[0.474,10.953],[5.442,6.866],[10.345,-0.983]],"o":[[-5.214,-0.758],[-5.225,0.692],[-2.678,4.136],[0.299,7.785],[0.154,4.005],[3.725,4.782],[38.266,2.191],[7.147,-0.703],[9.088,-6.942],[-0.369,-8.534],[-5.442,-6.866],[0,0]],"v":[[-62.166,49.019],[-77.91,48.193],[-91.092,55.471],[-93.481,69.578],[-92.585,92.934],[-89.66,104.45],[-72.448,110.403],[42.428,109.774],[62.682,103.794],[71.776,73.296],[67.151,51.28],[35.444,46.177]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.8046875,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.307,-0.001],[0.214,1.091],[0.378,4.171],[0.381,3.03],[-0.303,0.077],[-0.771,-3.008],[-0.209,-2.339],[0.166,-1.113]],"o":[[-0.307,0.002],[-0.235,-1.09],[-0.205,-2.285],[-0.366,-3.03],[0.291,-0.075],[0.785,3.002],[0.387,4.27],[-0.188,1.115]],"v":[[55.311,84.728],[54.513,83.593],[53.782,76.194],[52.851,67.284],[52.433,61.705],[54.394,66.992],[55.993,75.987],[56.083,83.567]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":275,"st":0,"bm":0}],"markers":[]}